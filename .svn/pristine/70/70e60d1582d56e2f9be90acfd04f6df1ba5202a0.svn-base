{"name": "test_login_ue_success_01", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"topNav\"]/div[2]/div/a/span[1]\"}\n  (Session info: chrome=106.0.5249.119)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00C11ED3+2236115]\n\tOrdinal0 [0x00BA92F1+1807089]\n\tOrdinal0 [0x00AB66FD+812797]\n\tOrdinal0 [0x00AE55DF+1005023]\n\tOrdinal0 [0x00AE57CB+1005515]\n\tOrdinal0 [0x00B17632+1209906]\n\tOrdinal0 [0x00B01AD4+1120980]\n\tOrdinal0 [0x00B159E2+1202658]\n\tOrdinal0 [0x00B018A6+1120422]\n\tOrdinal0 [0x00ADA73D+960317]\n\tOrdinal0 [0x00ADB71F+964383]\n\tGetHandleVerifier [0x00EBE7E2+2743074]\n\tGetHandleVerifier [0x00EB08D4+2685972]\n\tGetHandleVerifier [0x00CA2BAA+532202]\n\tGetHandleVerifier [0x00CA1990+527568]\n\tOrdinal0 [0x00BB080C+1837068]\n\tOrdinal0 [0x00BB4CD8+1854680]\n\tOrdinal0 [0x00BB4DC5+1854917]\n\tOrdinal0 [0x00BBED64+1895780]\n\tBaseThreadInitThunk [0x76037BA9+25]\n\tRtlInitializeExceptionChain [0x7774BB3B+107]\n\tRtlClearBits [0x7774BABF+191]", "trace": "self = <test_case.test_login.TestLogin object at 0x00000247C6A1A860>\nget_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e2c26fdbf1737eca849dea63c983dc36\")>\n\n    @allure.step('登录成功')\n    def test_login_ue_success_01(self, get_driver):\n        LoginUe(get_driver).login_ue('13518101893', '123456')  # 正式数据\n>       assert LoginUe(get_driver).get_login_num() == '13518101893'\n\ntest_case\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\login_ue.py:24: in get_login_num\n    return self.driver.find_element(*HL.login_num).text\nd:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:856: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nd:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000247C70A6860>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76037BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7774BB3B+107]\\\\n\\\\tRtlClearBits [0x7774BABF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"topNav\"]/div[2]/div/a/span[1]\"}\nE         (Session info: chrome=106.0.5249.119)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00C11ED3+2236115]\nE       \tOrdinal0 [0x00BA92F1+1807089]\nE       \tOrdinal0 [0x00AB66FD+812797]\nE       \tOrdinal0 [0x00AE55DF+1005023]\nE       \tOrdinal0 [0x00AE57CB+1005515]\nE       \tOrdinal0 [0x00B17632+1209906]\nE       \tOrdinal0 [0x00B01AD4+1120980]\nE       \tOrdinal0 [0x00B159E2+1202658]\nE       \tOrdinal0 [0x00B018A6+1120422]\nE       \tOrdinal0 [0x00ADA73D+960317]\nE       \tOrdinal0 [0x00ADB71F+964383]\nE       \tGetHandleVerifier [0x00EBE7E2+2743074]\nE       \tGetHandleVerifier [0x00EB08D4+2685972]\nE       \tGetHandleVerifier [0x00CA2BAA+532202]\nE       \tGetHandleVerifier [0x00CA1990+527568]\nE       \tOrdinal0 [0x00BB080C+1837068]\nE       \tOrdinal0 [0x00BB4CD8+1854680]\nE       \tOrdinal0 [0x00BB4DC5+1854917]\nE       \tOrdinal0 [0x00BBED64+1895780]\nE       \tBaseThreadInitThunk [0x76037BA9+25]\nE       \tRtlInitializeExceptionChain [0x7774BB3B+107]\nE       \tRtlClearBits [0x7774BABF+191]\n\nd:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: NoSuchElementException"}, "steps": [{"name": "登录成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"topNav\"]/div[2]/div/a/span[1]\"}\n  (Session info: chrome=106.0.5249.119)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00C11ED3+2236115]\n\tOrdinal0 [0x00BA92F1+1807089]\n\tOrdinal0 [0x00AB66FD+812797]\n\tOrdinal0 [0x00AE55DF+1005023]\n\tOrdinal0 [0x00AE57CB+1005515]\n\tOrdinal0 [0x00B17632+1209906]\n\tOrdinal0 [0x00B01AD4+1120980]\n\tOrdinal0 [0x00B159E2+1202658]\n\tOrdinal0 [0x00B018A6+1120422]\n\tOrdinal0 [0x00ADA73D+960317]\n\tOrdinal0 [0x00ADB71F+964383]\n\tGetHandleVerifier [0x00EBE7E2+2743074]\n\tGetHandleVerifier [0x00EB08D4+2685972]\n\tGetHandleVerifier [0x00CA2BAA+532202]\n\tGetHandleVerifier [0x00CA1990+527568]\n\tOrdinal0 [0x00BB080C+1837068]\n\tOrdinal0 [0x00BB4CD8+1854680]\n\tOrdinal0 [0x00BB4DC5+1854917]\n\tOrdinal0 [0x00BBED64+1895780]\n\tBaseThreadInitThunk [0x76037BA9+25]\n\tRtlInitializeExceptionChain [0x7774BB3B+107]\n\tRtlClearBits [0x7774BABF+191]\n\n", "trace": "  File \"d:\\python3.10\\lib\\site-packages\\allure_commons\\_allure.py\", line 180, in impl\n    return func(*a, **kw)\n  File \"d:\\code\\ui\\test_case\\test_login.py\", line 23, in test_login_ue_success_01\n    assert LoginUe(get_driver).get_login_num() == '13518101893'\n  File \"d:\\code\\ui\\common\\login_ue.py\", line 24, in get_login_num\n    return self.driver.find_element(*HL.login_num).text\n  File \"d:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 856, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"d:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n  File \"d:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "get_driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"e2c26fdbf1737eca849dea63c983dc36\")>"}], "start": 1666160852274, "stop": 1666160853201}], "start": 1666160852274, "stop": 1666160853202, "uuid": "8df31265-0d8b-4138-8ac9-c736d87fa495", "historyId": "93d6fe6d9ddcca69683f884023b6b9bc", "testCaseId": "a8d89ba98168287d132bb2b04d1cd9dc", "fullName": "test_case.test_login.TestLogin#test_login_ue_success_01", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-G7NB6CH"}, {"name": "thread", "value": "7464-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_login"}]}